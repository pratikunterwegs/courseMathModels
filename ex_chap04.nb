(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    218078,       3986]
NotebookOptionsPosition[    215846,       3940]
NotebookOutlinePosition[    216600,       3966]
CellTagsIndexPosition[    216557,       3963]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Exercise 4.14",
 FontFamily->"TeX Gyre Schola"]], "Section",
 CellChangeTimes->{{3.769770650742399*^9, 3.7697706517383623`*^9}, {
  3.770702950375367*^9, 3.770702965176557*^9}, {3.77087230092914*^9, 
  3.7708723102847633`*^9}, {3.770884296584401*^9, 
  3.770884310453442*^9}},ExpressionUUID->"41c8f6e2-a8fe-4e6a-88e0-\
1e28ab8f1d1f"],

Cell[TextData[{
 StyleBox["Pratik Gupte and Josh Lambert\n",
  FontFamily->"TeX Gyre Schola"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["30", "th"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"TeX Gyre Schola",ExpressionUUID->
  "ecc12984-c7ee-40cd-acf7-1ac8a39f8287"],
 StyleBox[" June, 2019",
  FontFamily->"TeX Gyre Schola"]
}], "Author",
 CellChangeTimes->{{3.769770650742399*^9, 3.7697706517383623`*^9}, {
  3.770702950375367*^9, 3.770702965176557*^9}, {3.77087230092914*^9, 
  3.7708723102847633`*^9}, {3.770884296584401*^9, 
  3.770884347507469*^9}},ExpressionUUID->"c4b2ec23-cf6f-46e5-b968-\
a60c8fd60a66"],

Cell[TextData[{
 StyleBox["Here we ignore the latently infected cells from 4.13 and examine \
whether this changes disease dynamics. \nWe use the following parameter \
values:\n\[CapitalGamma] = 1.36, \[Mu] = ",
  FontFamily->"TeX Gyre Schola"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1.36", "\[Times]", 
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]]}], ","}], TraditionalForm]],
  FontFamily->"TeX Gyre Schola",ExpressionUUID->
  "71153397-25c9-438e-b2e3-8b57b56b9e59"],
 StyleBox[" \[Tau] = 0.2, \[Delta] = 0.33, \[Pi] = 100, \[Sigma] = 2, and \
\[Beta] = ",
  FontFamily->"TeX Gyre Schola"],
 Cell[BoxData[
  FormBox[
   RowBox[{"2.7", "\[Times]", 
    SuperscriptBox["10", 
     RowBox[{"-", "4"}]]}], TraditionalForm]],
  FontFamily->"TeX Gyre Schola",ExpressionUUID->
  "360f26c6-df47-4340-8e2b-c123c4d16f97"],
 StyleBox[".",
  FontFamily->"TeX Gyre Schola"]
}], "Text",
 CellChangeTimes->{{3.7708724453015347`*^9, 3.770872561510118*^9}, {
  3.770876085308693*^9, 3.770876162421131*^9}, {3.770876222357143*^9, 
  3.7708763517267923`*^9}},ExpressionUUID->"760e56cf-84be-4380-9184-\
0be450bde590"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";", " ", 
  RowBox[{"Clear", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.770702679007386*^9, 3.770702682832017*^9}, {
  3.770702742107053*^9, 3.7707027800132523`*^9}, {3.770702860726038*^9, 
  3.770702932050289*^9}, {3.770704153755538*^9, 3.770704169508136*^9}, {
  3.7707043045912447`*^9, 3.770704319708149*^9}, {3.770704742384123*^9, 
  3.770704743833105*^9}, {3.770705617159505*^9, 3.770705628282975*^9}, {
  3.770705772741867*^9, 3.7707057728461027`*^9}, {3.770712232189625*^9, 
  3.770712232426673*^9}, {3.770716731683344*^9, 3.770716732435499*^9}, {
  3.77071686402773*^9, 3.7707168653431807`*^9}, {3.770717763437974*^9, 
  3.7707177637076607`*^9}, {3.7707178627080383`*^9, 3.770717862906823*^9}, {
  3.770717960764009*^9, 3.7707179999033813`*^9}, {3.770718106068088*^9, 
  3.770718125463801*^9}, {3.7708725689964123`*^9, 3.770872577710314*^9}, {
  3.7708726234336987`*^9, 3.770872629926373*^9}, {3.770877116539587*^9, 
  3.770877129471731*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"8ef243f4-6f94-4d11-97c6-d7657e3eed67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"define", " ", "the", " ", "system", " ", "of", " ", "ODEs"}], 
    ",", " ", 
    RowBox[{
    "where", " ", "odeCs", " ", "is", " ", "the", " ", "susceptible", " ", 
     "cells"}], ",", " ", 
    RowBox[{"and", " ", "odeCi", " ", "is", " ", "infected", " ", "cells"}]}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"odeCs", " ", "=", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Cs", "[", "t", "]"}], ",", " ", "t"}], "]"}], " ", 
      "\[Equal]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"gamma", "*", "tau"}], ")"}], " ", "-", " ", 
       RowBox[{"(", 
        RowBox[{"mu", "*", 
         RowBox[{"Cs", "[", "t", "]"}]}], ")"}], " ", "-", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"beta", "*", 
           RowBox[{"Cs", "[", "t", "]"}], "*", 
           RowBox[{"pie", "/", "sigma"}]}], ")"}], "*", 
         RowBox[{"Ci", "[", "t", "]"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"odeCi", "=", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Ci", "[", "t", "]"}], ",", " ", "t"}], "]"}], " ", 
      "\[Equal]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"beta", "*", 
         RowBox[{"Cs", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"pie", "/", "sigma"}], ")"}], "*", 
         RowBox[{"Ci", "[", "t", "]"}]}], ")"}], " ", "-", " ", 
       RowBox[{"(", 
        RowBox[{"delta", "*", 
         RowBox[{"Ci", "[", "t", "]"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sysOde", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"odeCs", ",", " ", "odeCi"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sysOde", " ", "/.", " ", 
     RowBox[{"beta", "\[Rule]", " ", "0.027"}]}], " ", "/.", " ", 
    RowBox[{"t", "\[Rule]", " ", "0"}]}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzE0ow3EAxvFhLWUWE0lKJrWWLQdm4jALK0J20CxtSy2LNZFZlGyUsqwc
sMNWlLA5rGwO0pQsmVpcvIWVvSjMOGzTGgf/53d4+pyeb/XwuEyTS6PRKqnB
hdaX0YLyz7bIpmIMZnX+SbiqMxnhYYvNDDN2swUq+aIaJuWupL4WzsbZQsh1
/TRBX1dQB4POLHG/ovYRcljLT1B9YkvAzhI7UVvMKC2i7N0rJKZCBimb0vFt
JfKiNDkc+OURI3n6AOTuTBPFzrsb6KGHiP7J8jA0vf29wgu+JAkN9+406Uaq
VErK2LFQDZ9fEhp4NCgyQPnK1jzMTzlMsO5rLgrX2qUx6BkRxGGmcTFJ/vR0
h4py6JLfA92uWD9kfgRk8EywbYS+Bi+x7EHrhXTOBPHdmr2C4jDzGsbPl/Rq
yr7qA6LltHkKOhjdxJyZjXWoYN0S/wHlzMhk
  "],
 CellLabel->"In[1]:=",ExpressionUUID->"6cfc5c05-8640-467f-87bc-69428a7a07eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["Cs", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"gamma", " ", "tau"}], "-", 
     RowBox[{"mu", " ", 
      RowBox[{"Cs", "[", "0", "]"}]}], "-", 
     FractionBox[
      RowBox[{"0.027`", " ", "pie", " ", 
       RowBox[{"Ci", "[", "0", "]"}], " ", 
       RowBox[{"Cs", "[", "0", "]"}]}], "sigma"]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Ci", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "delta"}], " ", 
      RowBox[{"Ci", "[", "0", "]"}]}], "+", 
     FractionBox[
      RowBox[{"0.027`", " ", "pie", " ", 
       RowBox[{"Ci", "[", "0", "]"}], " ", 
       RowBox[{"Cs", "[", "0", "]"}]}], "sigma"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7708755452390842`*^9, 3.770876023904375*^9, {3.770876791470228*^9, 
   3.7708768005731564`*^9}, 3.770876943559064*^9, 3.770877024858323*^9, 
   3.770877135802369*^9, 3.770877250609933*^9, 3.770877584322839*^9, 
   3.7708778660685167`*^9, 3.770878905335618*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"1442b11b-7df2-462f-8e92-8848ab9ad40c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"def", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"doSimHiv", "[", 
    RowBox[{
    "CsInit_", ",", "CiInit_", ",", " ", "gamma0_", ",", " ", "tau0_", ",", 
     " ", "beta0_", ",", " ", "mu0_", ",", " ", "delta0_", ",", " ", "pi0_", 
     ",", " ", "sigma0_", ",", " ", "maxT_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"init", ",", " ", "sol", ",", " ", "params"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"def", " ", "initial", " ", "conditions"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"init", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cs", "[", "0", "]"}], " ", "\[Equal]", " ", "CsInit"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"Ci", "[", "0", "]"}], "\[Equal]", " ", "CiInit"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"get", " ", "numerical", " ", "solution"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"sol", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sysOde", ",", " ", "init"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"Cs", ",", " ", "Ci"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "maxT"}], "}"}]}], "]"}]}], 
      ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"set", " ", 
          RowBox[{"parameters", ":", " ", "gamma"}]}], " ", "=", " ", 
         RowBox[{
         "source", " ", "of", " ", "new", " ", "susceptible", " ", 
          "cells"}]}], ";", " ", 
        RowBox[{"tau", " ", "=", " ", 
         RowBox[{
         "entry", " ", "rate", " ", "of", " ", "susceptible", " ", 
          "cells"}]}], ";", " ", 
        RowBox[{"mu", " ", "=", " ", 
         RowBox[{"non", "-", 
          RowBox[{
          "disease", " ", "death", " ", "rate", " ", "of", " ", "susceptible",
            " ", "cells"}]}]}], ";", " ", 
        RowBox[{"beta", " ", "=", " ", 
         RowBox[{"viral", " ", "infection", " ", "probability"}]}], ";", " ", 
        
        RowBox[{"pi", " ", "=", " ", 
         RowBox[{
         "rate", " ", "of", " ", "production", " ", "of", " ", "virions"}]}], 
        ";", " ", 
        RowBox[{"sigma", " ", "=", " ", 
         RowBox[{"virion", " ", "death", " ", "rate"}]}], ";", " ", 
        RowBox[{"delta", " ", "=", " ", 
         RowBox[{
         "death", " ", "rate", " ", "of", " ", "actively", " ", "infected", 
          " ", "cells"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"params", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"gamma", " ", "\[Rule]", " ", 
          StyleBox["gamma0",
           FontSize->12]}], 
         StyleBox[",",
          FontSize->12], 
         StyleBox[" ",
          FontSize->12], 
         RowBox[{
          StyleBox["tau",
           FontSize->12], 
          StyleBox["\[Rule]",
           FontSize->12], " ", "tau0"}], ",", " ", 
         RowBox[{"beta", "\[Rule]", " ", "beta0"}], ",", " ", 
         RowBox[{"mu", "\[Rule]", " ", "mu0"}], ",", " ", 
         RowBox[{"delta", "\[Rule]", " ", "delta0"}], ",", " ", 
         RowBox[{"pie", " ", "\[Rule]", " ", "pi0"}], ",", " ", 
         RowBox[{"sigma", "\[Rule]", " ", "sigma0"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"make", " ", "plot"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Cs", "[", "t", "]"}], " ", "/.", "sol"}], " ", "/.", 
            "params"}], "]"}], ",", " ", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Ci", "[", "t", "]"}], "/.", "sol"}], "/.", "params"}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "maxT"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", " ", "Red"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<susceptible\>\"", ",", " ", "\"\<infected\>\""}], 
            "}"}], ",", " ", "Below"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", " ", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<\[Beta] = ``\>\"", ",", "beta0"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<time\>\"", ",", "\"\<n cells\>\""}], "}"}]}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7708757408586683`*^9, 3.7708757818713503`*^9}, {
   3.770875874915811*^9, 3.7708759486335506`*^9}, 3.770876640972247*^9, {
   3.770876926416897*^9, 3.770876936780718*^9}, 3.7708771105387993`*^9, {
   3.770877199376589*^9, 3.770877234861754*^9}, {3.770877278892531*^9, 
   3.770877309756254*^9}, {3.770877340694228*^9, 3.7708773832525454`*^9}, {
   3.770877526594885*^9, 3.770877536804565*^9}, {3.770877645711751*^9, 
   3.770877727726042*^9}, {3.770877763051811*^9, 3.77087778672621*^9}, {
   3.7708778248320303`*^9, 3.770877851106738*^9}, {3.770877890782566*^9, 
   3.770877893931807*^9}, {3.770878112600931*^9, 3.77087811619312*^9}, {
   3.7708798231808147`*^9, 3.7708798274127283`*^9}, {3.770879880332036*^9, 
   3.7708799024542837`*^9}, 3.770880348944325*^9, {3.770880392597372*^9, 
   3.770880427768705*^9}, {3.77088060661791*^9, 3.7708806092901573`*^9}, {
   3.7708813937250643`*^9, 3.770881398636881*^9}, {3.7708820542991943`*^9, 
   3.7708820777972116`*^9}, {3.7708821409606867`*^9, 3.770882144681127*^9}, {
   3.770882184619933*^9, 3.770882244559916*^9}, {3.770882333464902*^9, 
   3.770882378560433*^9}, {3.7708832510786963`*^9, 3.770883279167762*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"ac5b65bd-a65f-4a0d-8e82-415f05f5db58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "explore", " ", "two", " ", "values", " ", "each", " ", "of", " ", 
    "initial", " ", "number", " ", "of", " ", "infected", " ", "cells", " ", 
    "and", " ", "beta"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"params1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "200", ",", "1", ",", " ", "1.36", ",", " ", "0.2", ",", " ", 
       "0.000027", ",", " ", "0.00136", ",", " ", "0.33", ",", " ", "100", 
       ",", " ", "2", ",", " ", "120"}], "}"}]}], ";", 
    RowBox[{"params2", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "200", ",", "1", ",", "1.36", ",", " ", "0.2", ",", " ", "0.00027", ",",
        " ", "0.00136", ",", " ", "0.33", ",", " ", "100", ",", " ", "2", ",",
        " ", "120"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params3", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "200", ",", "1", ",", "1.36", ",", " ", "0.2", ",", " ", "0.0027", ",", 
       " ", "0.00136", ",", " ", "0.33", ",", " ", "100", ",", " ", "2", ",", 
       " ", "120"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params4", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "200", ",", "1", ",", "1.36", ",", " ", "0.2", ",", " ", "0.000135", 
       ",", " ", "0.00136", ",", " ", "0.33", ",", " ", "100", ",", " ", "2", 
       ",", " ", "120"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simList", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"doSimHiv", ",", " ", 
       RowBox[{"{", 
        RowBox[{"params1", ",", " ", "params2"}], "}"}], ",", " ", 
       RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotList", " ", "=", " ", 
     RowBox[{"doSimHiv", " ", "@@@", " ", 
      RowBox[{"{", 
       RowBox[{
       "params1", ",", " ", "params2", ",", " ", "params4", ",", " ", 
        "params3"}], "}"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.770878469898675*^9, 3.770878568854875*^9}, {
  3.770878867847055*^9, 3.77087886827521*^9}, {3.770879503319697*^9, 
  3.7708795114601927`*^9}, {3.770879550577633*^9, 3.770879551043106*^9}, {
  3.770879581226594*^9, 3.770879603314823*^9}, {3.770879724854988*^9, 
  3.7708797590762243`*^9}, {3.770880286610529*^9, 3.770880333060728*^9}, {
  3.770880464191976*^9, 3.7708804814510593`*^9}, {3.770881316821568*^9, 
  3.770881343464024*^9}, {3.7708818699325666`*^9, 3.770881878531007*^9}, {
  3.770881908945977*^9, 3.770881919042251*^9}, {3.770882407559733*^9, 
  3.7708824080344543`*^9}, {3.770882551061171*^9, 3.770882555886066*^9}, {
  3.770882609141819*^9, 3.770882611060184*^9}, {3.770883057161591*^9, 
  3.770883067408848*^9}, {3.770883110680696*^9, 3.770883211433496*^9}, {
  3.770883262713437*^9, 3.77088326773713*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"dd33e81a-9fd4-49cc-8ee9-3e8421eb3c71"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnum",
   "\"Encountered non-numerical value for a derivative at \\!\\(\\*RowBox[{\\\
\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"0.`\\\"}]\\).\"",2,259,170,
   27696912310962916982,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.770882612235509*^9, 3.770882642172793*^9}, {
  3.7708830454219627`*^9, 3.770883068809247*^9}, {3.770883118934433*^9, 
  3.77088321927277*^9}, {3.770883268552444*^9, 3.770883281618704*^9}},
 CellLabel->
  "During evaluation of \
In[255]:=",ExpressionUUID->"9a838e8c-a35b-4146-a841-9ebebd21daf8"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnum",
   "\"Encountered non-numerical value for a derivative at \\!\\(\\*RowBox[{\\\
\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"0.`\\\"}]\\).\"",2,259,171,
   27696912310962916982,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.770882612235509*^9, 3.770882642172793*^9}, {
  3.7708830454219627`*^9, 3.770883068809247*^9}, {3.770883118934433*^9, 
  3.77088321927277*^9}, {3.770883268552444*^9, 3.7708832816867933`*^9}},
 CellLabel->
  "During evaluation of \
In[255]:=",ExpressionUUID->"bc69daf9-b2d5-4448-8f92-9e536212f742"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnum",
   "\"Encountered non-numerical value for a derivative at \\!\\(\\*RowBox[{\\\
\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"0.`\\\"}]\\).\"",2,259,172,
   27696912310962916982,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.770882612235509*^9, 3.770882642172793*^9}, {
  3.7708830454219627`*^9, 3.770883068809247*^9}, {3.770883118934433*^9, 
  3.77088321927277*^9}, {3.770883268552444*^9, 3.770883281754221*^9}},
 CellLabel->
  "During evaluation of \
In[255]:=",ExpressionUUID->"54f46f12-0897-4fc9-b061-ed612762b37a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"ndnum\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,259,173,27696912310962916982,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.770882612235509*^9, 3.770882642172793*^9}, {
  3.7708830454219627`*^9, 3.770883068809247*^9}, {3.770883118934433*^9, 
  3.77088321927277*^9}, {3.770883268552444*^9, 3.770883281760313*^9}},
 CellLabel->
  "During evaluation of \
In[255]:=",ExpressionUUID->"cf6845f0-1e90-4a98-9685-58fb43c923d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"plotList", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"plotList", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"plotList", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
        RowBox[{"plotList", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", 
    "\"\<HIV dynamics with different parameters\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7708805476350117`*^9, 3.770880557506757*^9}, {
   3.770880637916913*^9, 3.770880726323352*^9}, {3.770882636844105*^9, 
   3.770882639301539*^9}, {3.770882686091523*^9, 3.7708826931968937`*^9}, {
   3.770882728261664*^9, 3.770882742735229*^9}, 3.770882791909768*^9, {
   3.770882878894415*^9, 3.7708829330942287`*^9}, 3.770882979094103*^9},
 CellLabel->
  "In[260]:=",ExpressionUUID->"eec7abc5-e3c3-4dd5-937f-cadc237c2be9"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TemplateBox[{GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              LineBox[CompressedData["
1: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
dGt9Nof8H3GdcRA=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$78136#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJwV0H080wkcwHGpu3Jdkog6bec8vOQh9DBh8/2ymdtqChtN+yVPtQrlubyK
uEShQtilkFt0dAtJnknuyvVyHmPprDyUuzzMCjWuXP3xeb3//+j7HXMPVFVR
UeF87otzsrZWw5RWh85RvfLFRTn05umedJQWAv/ImsDJSTmgdoefrrQCQnN4
VqPP5RC1p6R/qbQFrj0ROk7el8OaKZ0MZX83HM7ymwo6LocX9a7HZvqHobYk
LYI8MgVMwzeDiv63kMqkUWw7JkHZb5M13a+KdiupHnEPxuEhvVjcVbgWDU1/
Gu9uGAO9FzWv/cw3oqfE/XvRqVHQCvIpWU43wEfWz2vnKocgw5pZ58ozweB1
q1Ust8jgmciqWaFhgepK4WHW4jNIEcd1qK63xpXtY60h2n2gc2XkfOb1rdho
+Ym2vL0bkrgsh+657TgV3f22zqwTwm1v+LQl7EAKc8IvJ/wJMOTzMSEjdtgX
fUHRmfII4qluvht20PATmbZzG7aCneTnytgmwLj/wsbOWT2AoA+KM49XOeL0
OJ1mHdcASjMNmQXPCWs7Gl8Wz1cDtfR2QXY2HSucD2q2Uu6BQpN9wLOFgcc3
bpjIp1TAaOoBz7DlTAwtGtKvkUmAJY9mvaK4IFfrJH04rAQm/FeEV8b9iLVe
peeZ+4s+/9RRTWph4ZIjYppAWQia7cYXy+RsnGVfUX/tXAB6yXf2UCi7sKnK
P7ExLRdEZrYaaw9x8J5FmmAhKwf+3OC4/V26K/JttEoZeAXs9FouW/btxpRE
xd1vTdNBfWlhhG/CHjy18Op64NE0IMWTqXxjN5wYjslOGEkGNSNBlfsjN7xx
f115DykRNtPW34km3DEy+JaEQU6AMJnmQ7aKB8pFZ3Nd7saC/F0qjyXywOFi
5wzLnTHgYvnHVZYFF2eixJceZkdB4zv7hfd/cXFZyqTS2yQcQsy3DHQF8lDL
Z3C1JPg40KYCevlqnmh82epUZedRcDbU5awq9ESyW8Qm445DYHLmwokWGy9k
qLn6RIYGgGmgbZPRgBe+rfP4ah3XFwIbhWcrQ/ci57HLgEolAU0FvQEKbT7u
rQo5M6jPh5lbi+8t7/MxX6Ktlsflgb9RqdpVjjfSTbj+6q7uoDDNpFRMe+MS
9pBSc9luqBYvDM0m78P8tl9ic9PZ4M0wQHuSAMfbc0exlwnfBSfVbG4W4NZb
Kp03CTpofxNUzvEiULeuPt3mGoKYfjpmmk9gq/wg59llhC2nL9IzBQQWG8R3
JSQiuE6XPZX6ErishUSeDEE41zer9A8ikCq8wyA5IXwojHOKiSewuojX8HcP
wIB9Zk9RKYEhT/fNOMc6gDBSfI0lIbCMSUbhYQeYk9wLnCgjMI3pKRNxHUDz
B+l76yoCjQLc3hiaOcDOFRv1GpoJnNg2uGlMSoP63qKAnqcEXiJxM1ba0ICt
Xm0RJSVQ2Ge7T92ABlKXtjnd5wQqRwX9pNU0mKkdT97/ksBdJ9IeCMeoYHHD
6rd/3xAoy1Iy80VUqB9wjEqdJPCmvlmmeiIV2FoeYDlNoN0/n5xSQqlwMCmy
K2KWwMacppu32VSYaT53VecDgeU1vzPcbKiQMJ/jXztPYFhyAXmpIRU0tv1q
TnwkMKFAYN6iQYW84NrZxUUCA/K+9r340R7+B9Y0PRc=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$78136#2"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
          GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {False, False}, AxesLabel -> {
            FormBox["\"time\"", TraditionalForm], 
            FormBox["\"n cells\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox[
            "\"\[Beta] = \\!\\(\\*FormBox[\\\"0.000027`\\\", TraditionalForm]\
\\)\"", 
             StringForm["\[Beta] = ``", 0.000027], Editable -> False], 
            TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{Automatic, Automatic}, {
            Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
        
         FormBox[
          
          TemplateBox[{"\"susceptible\"", "\"infected\""}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
           Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {192., -192.}, {Center, Center}, {360., 360.}],
      InsetBox[
      TemplateBox[{GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$78303#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$78303#2"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
          GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {False, False}, AxesLabel -> {
            FormBox["\"time\"", TraditionalForm], 
            FormBox["\"n cells\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox[
            "\"\[Beta] = \\!\\(\\*FormBox[\\\"0.00027`\\\", \
TraditionalForm]\\)\"", 
             StringForm["\[Beta] = ``", 0.00027], Editable -> False], 
            TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{Automatic, Automatic}, {
            Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
        
         FormBox[
          
          TemplateBox[{"\"susceptible\"", "\"infected\""}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
           Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {576., -192.}, {
      Center, Center}, {360., 360.}]}, {InsetBox[
      TemplateBox[{GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              LineBox[CompressedData["
1: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
GW7VSxsbDBg2ST1DR/4fIJcRrw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$78637#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJwV23c81V0YAHCJjErZskJGyBaZ57GuPa9xcUkkUkYqomFmkySkCKVIKaUk
Kq+WkMxcIyvzEtdKJN7TXz7fz/3d8zvnOc/znHP/IOoZaOdNT0dHx85AR/fv
76+Bz+/Fk9/r/k64fsmQjoY68/nC9ChFaEu3al4kgRGA+6snH+UpurArXWb7
mADw9LGz7DasRVvtdDkmipUgxOZB91ZKPfI8uKB3PdUQjjxrerCZ+glt6dcs
yXCzBwuenxf/GDQjHs2ZnGxWD7ilHV/y50Iret+fLLLT7Siwz/JmrHa3o4+9
hx8lJRyDuNsl51eUu5BLhjpzBtEH1m00vJdTu9FofjmzVLgPBNM3Wi1O9qDv
G5p+Xm4+MPnM5dC8QT9C19giUyR9wN17WnQufwBNy9bdZB0/Bn7b31z+dWEI
pfIUhRoUHYPBWqvApe4R5HjEvcZhzzHI5eY9eppxFPld/XQ7ocsb7AMGSQvK
Y2hn+gfd4AxvaNwbpE9LnUCfC7P9s9i84UX0Ve4ZgxnkKHAh/+Duo0AQp36f
715AhSftPHeoe8JdGytSRcAiMro8Ts+xeQS2XHzaHsS4hG5vv5f3/tMRqO0K
/zSnvIz69DgC9rseAaX47RU/U1dQPQ9/RkWiBwhSD8ROGayjyFPJ+XLM7hDO
c3WjpHcdXapbFdgoc4Nu/eVzvqf+IkN3htPTNm6QcfO1/0T+BtJ9HbHClk+G
WMn7ZQsX6EDPf7ZYwMgVVrvVr9O66SGaaLM94h0JXioze9yX3gohjbzb0CkS
hKRSZNzPb4XizONkDhESLOiH1TUJM4BY/4GW0UgnoD56NX3PmxFcd1u/+Wbl
CP0xOvpui0zQxl/ynWGPPeQO7NzJZcQMvFa0D17fiEDSGOhuzGKGD83ctYWZ
ROiaveR/SJMF6nrV5R9zEqHFuS6HM4oVwPJyV52AHdQpGMx9ZtsJ26t7Gz1t
beBSEuerSI+dsGH865uvgA1oj/2IVX+6EwhDzgLGzdZQnRvLX+zABl+ev5R0
/WMFTxk/GkXe2gWfmt553z9uCe3+4lYC3Oyw7v0l+G+0GSjdTHn2S4cdBjyc
uxJkzSC9YYmv/Rg7FCfenTrUZQpW+z78SHjJDtLRt7+syJpCI8U77JcrBxRu
WCYmjBvDO4P7d9uKOOGvxFJIf4oRKKY9nlpp4IQzOm9uPjQzgnxKlbzwHCcQ
zrXmmLMYwTn/hpd+WlxwlyeUfSbBEOSzp5q3dnLBt26BbcFXDSCXKrt8kJEH
/L0GkmI+6AHzQVVNsiwPuFw/Gy52RQ/ORmhHRNvywGmraZsTznpgw2XJ8jWP
B47zfvRcmANg1A0Q8lXjBQGDg2fzxAGCrj4xyvXhgzV9h2F/Bx0Y6HuZVJfK
B00ZoXTs69pgLvnf1/FnfHDty0+hpjvaIFnT5qxCtwfi/vPqC/mlBX2jC/7N
OXvgb/+5IusSTSAcOpi18Zkf8gOHtZHWIaiM1ukTp/EDa/z8z6/z6iD6xUjE
nEcArgYyvTEqVYf1I44Psj0FAIj5L7v41aEiOfSN4h8BGFT6Fa3JrAaCg9Xj
ngeEQJxEDf/Kogp0i6dyPtsKwd6LRycLW1RgdJuMmWKoEBwtvaAvnakCj+Rz
H/39TwgYfr1dtxRVAd1L4WdynIShPVsjpdJAGQ4LadG3RO+FnxqGZkr3FcFQ
afGZaslesD5b/cA1RBH2G5V53/yyFyq3VUoLEBTh3IvUo6o7RMA6trTlbosC
wMDfT1ucRAA5d9UOe8hDm9xA2q0ZEYhUUzGar5KF9+qvJqw3RUDRI0uC6CML
L/SyYCuHKKjWQtsDXlnIdbBaOK4uCvQ7g6oVzsuA58U3DurRouDxh+sespSG
heZ8wXZeMRC+JP9ml4AUjH4LP3tZRgwqDzzTjqBIwrchx5ZDOmKgOpplV50l
Ca+W2CJve4qBj5SXXgy3JMQIRvw4+UgMWiROBB4QlACuk4cfMBnsg4BZpuBe
830gw3Tno43TPtA+f1dHZ/c+gKLxkRsn9gHzxm2ro11icJLiL3Agcx/UebB/
WDoiBu8NL6TYjO0DhTzjop4YUTgjdCPgRrw4VPqfvEVo2wtJL/uTRm6Kg02E
BrIN2gsFRJH7sk/EobtaeEvu7r3QnHh/8DVFHBievhzstBcG8V/PbUakJUBy
NZkzaloQOlralWWbJSCMTfgyyYofJo/zWJ8ZkoC3vr/1gjb3wAaDy4nXSxKg
zHX8Y2LFHpDRGr5jLSQJR7ddCa3k2wPR9+e4zgRIwsHP9NeuLPCCcuSOldrd
UnD5tUd9URs3mAjYcG6TkAIaOmBAvsoN7i+uKVhrSMEvqcH+cVtuSJrh9x0+
IgUzO1L2H+3ighGSdA/jMymIZ+H0qBzjhAwlQo2Vw34wJfkOX5DmAIU+Z2Md
3/2wV0xmLOU3OzTH+nfInt8PZ3mJVYoN7LCNkjnNXLgffP02sw8cZ4fzl34I
vJvZD8W8C/LvKnbD0abIC+qx0iD93Eh8tooNtpzNZJbMlobhO517Zo+xQb5w
SSbXA2lINUyeGuJhA8qprw/nv0pDFv3t+mthO8GST/h7mYAMaOs9ZBk03QFq
3jU6Is9k4MSPHf/d5mSFDravn9k+ysDVn45SUa0sEPRyxOEvRQYamvzOyKSx
wIPtrAG9GzKQ/X3xReN2Ftj7lJSfaSYLav31PnS7mYF5c3mDeUQWSjOdRK01
t0FxCUvyypIsyH7cP3WTfhvo2wnxjjMdgNHhNePUJka4UGyo8E7uANyPEWB0
PMwINPNrhy+GHYB9YkU8pmkM0JOjWDe/Ww6a/C/RcTJvhdyOsl0hEnKwZsFX
9rOLHlzYpA6vachBK/9TV5+79Ph8ENqg95KDZ5baigoG9DAUwKrN9VwOtkqx
mfTEb4FJw9EqNWd5SJ1fsJ+TpYPSiMNMNf7yYK6ymNFKTwd+r3odUbQ8cOxa
6/Ou3EQzCm3LxmXyMHjM4/Ek1yai8b9Rcf4rDyH6lSKhw3/Rb1r24/OFCrCN
t/Qqw70/qFqWc3PzuQJ0XtLpD/T8g8KPpVnFNiqA4+e02w/3/kHrfbE/UxYV
QG74m0P6rTUU+eMl91cxRbCPnzSpvr2KYluKiUNnFMHTuWXt8OcVNHrC67xY
hCI8YJebeHF1BRmxiN45mqgIR38x3n7psoK2Gd5amMzDfSdPMfHZ7C+UUJ1x
df6jImg9Yg43E/6Fku9GfKXfowSi9INJhNwlZKZ6nIN7nxIwDAiYSPsvIeb3
dg5SckpgmDnIlAFLKPaHRJ+5nhL8nd7jMDe5iC6INY9nHleCbFK+ZjlaRAEF
fBuSr5TAXWnEZXzrAjqgSK+n8V4JLHI3208NzCPq2+kY8xYl6NPqST5RPY98
Bt+wBI0ogaeUbfrdoHnkIezNXc2qDDXXDXKYR2nI9lbFAXNXZXgTfODB71dz
aPeBm4Fu3sqgxzimUnJhDrXUxD4NDFSGSzSlgJ1oDpn1OR3KjFEGDf4uedqH
WaTPv2HwvUwZ/LVsY3v6fiLVHDPXwHVlaN353vWc5AxakFLNj9qmAmvrbkNJ
C9PoSZXQ8LXdKiA0reaq8nYayXXTjr0UVwEXraufdF2mkSRPdvAWSxWo3pIm
uSubingzfyRey1OB8MgABVWZKcQn+zz29z0VqP9gSHi/ZQrx18dFuD1RAV+R
uxfreiaRME36rNQ7FZjjHF37nTSJJCyCPGomVSA/s2XFfGECqTD8Vfuhogql
w3MnEjrGkerNFiUTHVWYu8Af5lwxjtSUCw48IqjCeQOvvstXxpGmh4FYqLMq
3LsUvzJjMY70ahN3bo9Qhbcjd1Z6m8aQ9RmeUeVGVVB5Njjn1zOKbLZPDmR3
qEKqTKDY5dpRZFdU3bPej8dXOPpp5vYocmwlf/04pwqfe3eRCn1GkduBO69c
uA9Cst9R0aS1H+jEqMLVaI+DcPJjqluF3A908vyWlInjB6FFMrTGhPsHCuDo
iLM4fRBQrj672N8RFAwhF3jiDoLv3i38OV9GUNitWp8HZQdB69i9bxGnRlC8
valu+6+DkKl6/8fT98OIv7KFn36LGqx9XGn2Lh9G5Zz2K0rb1UBfkbTXNWcY
fWt3f3J1rxr0sUxYs/oPI3HbM2K2JmrQeTyDy3fPMKq3vL2t9YYafLnfF3P1
4hByfCT+Y/OOGjx7dfeV0IkhRN3x4K1CuRpo2y4mjZCGEHtz5bkr9Wrg9V3h
LefBIeRh1ki1mlYDFtXUTpahQfSXsNzyRVsdangU1T0HB1D6vfCyvwR1WCs4
y8L+3wAS30aXIGerDnvNw5RE7wwgiw+seqne6pAS8PvbEd8BlGsg8swiTR1k
+vwczFe+o0Ngnt00qA5nP5Va7ZL8jppvt57+M6UORwcmSgJ3fkcemw42skvq
8OjqZIb4cj+Kf+PBksx8CMo1l9kTP/Sjb9oh582UDsF374Amab9+dFqj8PDn
6EMww+95CNX3IbMCtiXzlEPQY1WTPfa4D4kxXUhouX4Ivu1haGrO60OtnY4V
HSWHYJaiMOAa3ofkg3ZsHWg5BPCCG06p9SHG7rBsDwq+V9H1e3JI9qF+nQnZ
H8OHIKP9MOM8dx9K3l5vP7l0CLbvMJTy/tWLJu+F3lvg14DC9jV/oVe96O3O
Mc2z4hrA2ysjfLusF2Wdsfu6IqcB2+7r7HLN60VG+nK/10EDtMMaD0dG9aKi
7yOmTD4aEP+8OinUoheRuax+CjzTADe9ysSWmR6kcr4mKr9WA6jMz1qbh3sQ
68h+HtGPGrCo2SBI192Dqh9vRZI9GrCs5f6Bob4H8ZhXpytuagAH+B6JyO1B
PyskJZ4xa0Jc5s8e4as96D1fZvVBDk3Qphd0mY/vQafHA0Y0JTRBds/7YPmQ
HtQaJa5qZK4J598FsdE79KD7k1cbPtlrgnVQwBdlyx50yXqTbOauCVTu51mZ
Rj1ITqj3svUpTdDR8jelqvUghlhj/vZwTSgTTH3+XaEH9VMry+1jNWEpe1p3
i3QPSnp5pds5WxOIEjd/dwv0oCN7/57oL9CEOxdNWpO4e9ChOD+6ww/wfHfz
cvnv6kETRCPpo6814UJwq/zbrT3IcG4tPOCHJgRtvO3OnKWgMJNMmf9mNOGw
Rda+b1MUVF4o18v5SxMEtj0tNxijID57D41qZi0gOFb2FfVTkOWj1cntHFrg
qsEnk0mhoOht13LcBbQgWbR2d0UnBc28/LCyVV4LYnLfbJ78QkGiHIfvO6pr
gZfrm8rtjRTkeOK3YyloAVHwqGfXRwpKfn9127qpFkjGr/78/I6C6oRkX1gR
teCLwH/aU3UUtBzy3ruQrAWaLn9VVN5QkEyrG/eStxa41dNe3q+hoGvR6Wdu
nNOC+F1MW3ZXUVBDn7T4TJQWBC6Vp219TkHrqu86dJO1oJWeD4k+oyClNHLM
1UwtyH0Vu+JbQUHHJpaVR/O04PVN9bzexxR0E66MqN3XAlnJ09wh5RTUemN/
RuITLejsCTPSekRBjIv/6fVXa0GpWhqHzEMK0rRwnZd/pwU3axeO6JdRUGDx
UkFUsxbcmJ7ii31AQXc3Um06u7Qgy+CF4FwpBfU4SdFJDWpBlGGuXQw2W0Xd
47BJLTALoNwGbANWl8PN81owCs+mJLHPeS2y7f2DP2fx4FHDflSb8uYUgzYY
WUZyBWCPcEsGvN+pDQGlbV0t2LyBb4V4ebUhdvuMOQm/36KB9OW4iDYYH/Hx
ZcXzixJduFArrQ2hOX2CY9gvwpMP7FLRhs78IZdJvJ7pDvH+I9raIOTJxsWF
1y8i9ya50kgbOFvXNXxxfBzinLSYrLUh5JvBm9EnFJQ0SKM6k7Rhm9f5jMSn
FPT2UFLuwyPaEOOlVeJYSUFLV/eZbfppw8MPAvPmLyhIerp21faMNuiHVrof
f0lB7oaOpXcvagPjsbyR8ld4P/PmSCtx2lAZERAg+Brv568EZrN0bdj19O1i
xVsKUi6t8Zkr0oZmXv0K+w8U5EPvwKv/UBseSd5pPtJAQbdcZz9mPtcGTcbR
+1lNFLSNTVRSs0Eb0tk7zoa2U5CWz6uulDZtWPhsfnjfNwoKqiNeHuzVhrvu
UnO/eiioNzhuNPanNnSUyNC4RihoV/PezO5f2qAtfpR0eJyCDCWqDWTodKCV
SdyhjYrrpXu66CuHDlhdc1mTXcLx1bY9wn9IB26k3QypYe5BJu75C+r6OnBw
PImnlq0HsUVOxzhY6EDKLbL4NFcPuvXu8r10Dx0Yff4tuFO0B700ezW9LVEH
+PlqzDp0elDESaaL4td0oHp/bD8B9wtCmj2bfp4OqOn4fZm06EGdbbOKFyt0
wOLT1f4qcg+ikfaFLPbowPEXJ0ViLvWgqvAgJvZRHYjQ1hbww/3q0q3XOfKz
OnDmlNL1iPQetGPIqeY4vS5c0rnKo3anB0n5pNANyehCVqXh27bGHuR+djmp
+bwuWLZ5djeI9SKJbH1B6mVdCFqeC8iV78X1fuURU7ou/BCyWs/V7EXh69Kt
+nd14bDIBTFpYi+6HuPOXd2sC6onr9eHx/Wi5qufbhcLIVgwlq9dX+5F155x
Kb2TQuCzNtpYz9CHXLqO1A8pIfgedSvxJWcfmuRbHxUgIHj8S9pCRbkPbS1Q
lMkIQMDZEOXsc6oPaZbfqLz0FgHXvQTVrt99yLC75e9sAwJPiaJTfiz9yIqO
wfhwOwLRjh+z0vz9yMsuoAeNIRhPSP0qpd2PCOdFIyIZAfc7LSWR6H4UtPfX
HT1ZgF/JWyu383xHy8/SG1bxz+pc5Q03U+nvKNxE9meFKsBpA8pAhfZ3dPmU
h5qYLoC8xOHkrUe/o9x3jQ30tgA14ZfLH1R+R+99bv98FwKgbe5wdLv7ADJd
1+C4cB4gq74gYPX0AGpJ71RTjQRgFnW/xZE0gHqqWSLvJgK4N435f3wxgGa3
n+G4fAtg0F1WS5VjEPE9MVEn1OP5tnx6I9M2iE7+no9s2KkHE/qhb8uqhpDm
qWM84xx6kCev2nru4xBipvaWbeXTg+A4ps/uXUOouO/dN10xPdhbWkU6uziE
Bt5cP/BcTQ8KFa6da1IcRtaXNSiFh/XgOzlllOXJMFLmiFI4X6EHfwTHcjTr
RtCq7O4BOQd96NfWvM4iMoZ+5fFHqbjow2mOfSWdKmNoaZeEuMZhfSh5QCws
Nx5Ds4safobH9eHA7KpsWuAYGqnx+uVyUR8kbV0nF9+OoUbzKraEYn3INFWU
E/QaR7kn3NHIsj6kiX759vrJBNIue1iQlWUAJX2pvVscqKhPpOy20U0DOEke
94j0paLwrNL8pdsGcChtIWnlPBVVRd27ZVdqACNdseSWIipSJhXksNUagN9j
8yVOGhVJM2amxw0bQNytUxsPE6YRz+HzkSEHDEFLPUoz8fEMet4ZFiGhZAhn
xsSVfP+bQfZm5y51HjQEP5M4XdWOGZRx8OwFZWQIYmPMuhm/ZtDOHYHnZm0N
YepyrQpZ+ydiqPYMOhZqCCIr9Vx9736ieQ4zD8d6Q2jt/rtXr24WUU6Ktfp9
MgSqeaK5R+ssqvu4hiKaDUFlp4We29AsSg8v21vyzRDGr+CGtDmLFEd2DK5S
DWHQPDfKT2cOBVR8dcvjNIJshiGBCxVzyHF7yZcKPiNQTN+zjfh2Dul6R+p8
FDICz/HRdfovc2jnHiWhOSkjqFFo2/9zYg49jMzoB20jUJ9X5FzYSUNUawfX
0aNGEMClFMatS0PtpXJNv48bwVdF4wO1BjT0aus2rZ2BRnAz4nGjpSkNJVa9
4FcLM4LkrrwIJXsa2r+Xrzc+1QiszbZ++O1LQ7vDaKa3MoxA//jbL0v+NPS7
vaH6SbYRRG+sK/YF01BDXNiNnkIjaBJsGz12gYZ8ZntJsi+MQJsWIhWWRkNW
Js8aUA1+fw5V7FMGDakVJR+yrzOClYXzGptZNLTNUZvvYqMRnLzyPkfuNg3d
e53X3TJgBBkDHW7R5TSUxhti/OOHEdwasowVeUpDIaesqlYmjaCFc/FByXMa
MpLYzBJZNIItG7xbQ2tpaDTFwzGYiQB7z2hK7fhMQwHUA2KKOwgw8zqf8LmJ
hlaMV3/+3E2A6z2XLE+30BDr1ozLx/kJIDWgIpzWQUOZHu62UnsJEG+cubLR
RUNCb2SExvYRgJ99TyeZQkOKYe8qPeQIcPKO4JvBfhzPb1cihZUJcLrvyCDD
IA0ZqJIt+tUIgOxIsrzDNOQ4t/TDCQjwvHfMb+sYDQ1Z/PeY24gAJa4Gwd/H
acjvQer5DlMCzK8ONN2dpKGL3pKc1kQCcPu75f2ZxvF5tzCwg0QAq/AU6eSf
NJQu8vZBI5kAjk8WVJnnaOhun5M+4RgBXis67GiapyF5DXE2hhMEeHf6w+ru
RRqqyqL1/BdIgPpnTqWGSzTUaJt4SieMAL8FGq+e/UVD9o8ddP5cJECHtvBM
8AoNfd8hxlIdTYBF8wvm7r9p6JjfbGdIPJ6vUX6d+ioN0T69KlBNIYCxpC55
EztcIv7kQjoBRKncCs/XaGhrDPHQk+sESEgdNHX+Q0MpQ3sZAnIJoHA39c00
No/uzFfZ2wRoWP5ddHKdhgpuvrw5dYcAGVmxO/uxpVdjfe6XEGBhLINL8y8N
PXW0VfF+RABbg7iWOGztSqFNsacE4GL7z7Ye+yM7tXHoBQHuFBdXzmDbBL7I
yq8hgNfxrJ3bNmiotznak1yH4/NyOZgN20vGWp7/A47vosQfRuyZeIG17s8E
6AxNrP33/ZCxiQ/XWwjgcS/6y7/x6QwqrxI7cD4NnDZMwE4qiHRjpxDgv+8f
1XWwuTYspL/2E2CUMPJ2GM8/z3XPcsowARyeJq+cxZasHqszGyeAgFTC6ipe
/xOepynM0wTQfXhryB9b88wl0sc5Anw0SfvUhuP3rs1MPHaJADVbxT5LYFso
8NL0Vgmwb1SQzg/H+1vKj5rNvwRgmjeIz8f740F9HP+a3hj8lchh7/D+TRlf
IJ5nMobDD2XmKXh/1+m5p3/tNga6gI3+Lrz/cR7DLyq5jeFNfWrca5wfu948
ig7mN4a0z6MiWQs0JBZG4J/dZwxXJF/d4KfR0MNvHONl+42B9/uJyo+zuH5V
ByuOyxlDvJq62lGcj6ZzoaZjasZQ/6Bn4jSVhgSVhOOYtY1Bb3vP2fc4n2eD
39fL6hlD7o7fQQwTuL5+7dYONjcGp3AVE+IPGhr4Wyq/edgYzF4vP1Lsw/FB
NifEvI2BNmhMoeuhoZioX/eN/IzBq/JX0X/fcH9iNBBNOWMMUmc+V3G301Dw
jn7OPYnGoNaa5bGjgYYMraJttNOM4T0lZcP7Aw3xpu9PPXzNGGKlNqIr6mmo
lvPstnt5xrB8fWhE+DWuLwG2VeWneLyyuFCnChrKlYYBiz5j8N05+N0rm4ZO
nhjnDxoyhqp0X+G5azSEHqU4XRszhrocUndAOu43ij2tPXPGIK3xx9EiEdff
oeB3xxhMIKJRZWdsON5Pwt2SSDkToMZst2B1xfnmxXy6MsIE0JWu8iRuHJ98
w9dvY03gyHvrLmZ2GprriWRqSjQBf1u1+5E7aGjBevXm8DUTWLa+SXHbivuX
FvU9W4kJ6H5lj747PIfouZp5jreawLe/Wpwx1+fQnvdXXgmJmoLyDupprZVZ
RBDnpY+vNwWFvWHmXo9/oilP4xKtT6bgf/zv+S/FP1FKYagVrckUHt//yKpx
6yfqEKbkOneZgtGmyDuuxJ/IY88NlQOTprDJ+V54xPMnCmMT8G7baQb5eVqR
NJ6f6OFv4QYBZzOI20u88DBqBlmrWwe0upmB50MB14vnZtDC2Qiuy55mEDCf
qUoMnEEai4MesyfMoJS77hCb2wz6+LNgte6SGbSRhNvfHZpBgyNissfumoFC
09FzaH4acXyRTHsyZwb0sTfSGHym0cacYnHjkhk0fLYwmnCbRlQOrdrRVTMo
Z/hT1G4/jepJ1lQ+BnOI7JEvfqc/jU6PhhKi+Mzh087Ujd17p1Hnn4YNWz1z
OL/tm5NPDxVly5wIXMwwh+hIT2ZffB+JtTwbtzPHHHgUE/ouWVJRUFBEnlSe
ObAlr4oVGFGRyYtrTa73zcFS8JYyvRoV/darlXpfYw6HblGtjXipyMV551Dm
qDkIX1t3+do3hQQTHtuoqVnAl/tfVaT8p9CD8kfvVjUtQMyzLpPVZwod6ipT
e40sgOGAQMuKxxSyFysRNDS1gMu5vyhz9lMopbZg0pZsAX73lKocdabQH9rV
SP9oC3gf5Rq1ZfcUSuBNX1SMt4Cje46XxLBO4f6admwp2QIO9Yd+2sU4hZST
kyzOX7eAvP6j80Zrk8hPIoYvscQCtHN275IZm0S9zmee3G2xAC2tIsP22knk
Gxm8z7fDAqb7TUhLVZPo172gLFmKBXCNqvqLPJtEHEsnLzwdtoClJK6srNJJ
ZJbmbVK3ZAEznCH1a1mTqLrecaiP3xKGeofCCk9PohxZjd2cPpagXJz1xV11
EjmYf0l/c8ISwvefDWtVxOOdOMLuF2QJcW7bU8zlJlHyg0SO/8IsQVbiRq+b
5CS6JN3LFZhiCWTx9rYFvkl0VOr8nqYKSxCscvjctzmBRI135Ya8sAQ/tV9Z
I+sTaODYHX6xGktgKki/ubA6gZzuNQmEvbeEbod1DfmlCWQmISgs1W0JmkaP
3TinJpDSvtdiMeuWkL8R3Xq1cwLN6tvekd9iBfQ29moy7RPogefYvl5GK9Dj
N8xs+jqBxIt2SijtsoJF7Yb90k0TiE/UXWpQ1AoelZzWt66fQF2wcD9J0gqS
ngUuy9dNoAyPuP1qslYwz618kffNBNpeUC6dqmoF0sKWK/SvJtCG8KaslrEV
PB57ut3g6QSq0b32cNzcCpwdX/b64vvyOXcpuQwbKxDKYXXKLp9A83nW8lPO
VvCmiWLAVjaBRgULFLNPWkHnrQUvr7sTqFBbtUL/lBV8Rgc5W4omkDu5QWn2
rBX4ypmb6BVOoO6bNGWjCCsIkFBV1MufQI38egcXr1pB9LkN33s5E6hV+LEk
Q7YV5M/EBB/KnkDfxIT4uG9ZAd9ovU3n9Qk0LLO6pnbPCmgaff7S1ybQuLzP
jHGZFTyNm84buTqBZpS7vpOeWMEtlX2Xi9Mn0G/NirrwV1ZQnhTiapKG16u7
92nyWyvQ2vdZa3/qBGIwSL1z670VvPz95Dl7ygTaZX487k2LFViol5O2JE0g
SVdRC/ofVkDe4ZFiFzeBDhy+osM5aQXT1938Ll2eQMpef+XFf1rBOnfzvWex
E0jnRA87YcUKmifIQpoxE0g/0Hir07oVyCawmCRHTyCT08+XfLZYQ/L9nxVj
URPI/vzV7sTt1lB6u1f0ReQEconYbMjdbQ3Xs8R4D2B7xPi/KuO2hn4TEZmy
iAl0LL6vrJbfGrKMTtupYJ9INs37stcaegRq4t9fmkBBV6rSBsSt4bVL9n/u
2CHXJCLnpK3B6er9lS3YF7KvnaJTsIY3Vsmi5RcnUPTNLV7sqtbAKjai5oWd
cDvQXkzDGmxzzRVEsdPufDdS0bWGBwQf+skLEyjzvrm6oYE1yL7ovF+FfaOs
er+DiTVMh6rwpmPnP5biP2ZpDVsE9pmcwr777Pr2UDtriJU3UHbFflC19W+8
kzUk6al8scR+UnNqNodsDTI/MnabYr94OzhYesQaLhRtWbLArn1n2fbqmDXc
KhEOdMau/1RT33TCGmbsdcMCsD81SVf2B1lDUMI+lhTs5q/ZxT/PWsOURzT3
U+z2DsbsjXBr4Flnuz6ETek+nbAr0hqqQi9e4sXrG+gbDhO5bA0p81ENjtij
g9YnlJKswTG+9Xg+NvXHa7L+FWvodBRynsWmTchaETOt4eNFwVQCjufy9A10
9AZe/57o9XvYa3NMSmfzrWGbKX3+Lrw/dEtnxeLu4O/vt/WNxN6xbstY8sga
Uk/J2oXj/eWgq/v18qk1rHDvPbwV5wMfg/zk5yo835GKwEzsfTtYm6b/s4ZA
38shLTh/9u8+V7v+0Rqk3eVdQnF+yXONP9rZbA05CwTB/Tj/NAXr0xW+WUNG
QDZPIc7PkX3iA1O91nCDLv22K87fRNk42buD1nA+OGhEMB7HQ9PsI9+UNWQ6
jZx5ljCBQp3b/2xZtwaLZZcxBVwPVxRzxd3pbOBkvpfjXlwvXqrm5jX0NsD6
goC4cT1t136Uc5bJBj4FX3fiwvXmYn5KhbrbBi7RJGrcM/H8rMVcjDlt4F1f
+9YoXL/0xI7Iu9w2cL3aIro0awKVuhxscee3gcm0gs0dN3C9Hl/17dhnA1EB
N7iEcH/ISojKr1WzAf+z4doupRPIL0X5wx4NG/CRlvjZ92AC6ab/mA7RsoG1
8nZTr4cTaCzbSEMJbKA25dqP6McTSPU+S2exqQ3Y7tO8zfAC58OHqyxXyDbQ
ohd/gvX9BLr3WV9xxt0G8naZPh75MIHCvyw6mh6xgTMsfLvrPuH+3uVwd+sx
G0hLG6FPwv02aHQPOhdoA6alAXecOyYQ29aiM0eibeBYaGL04I8JtG31LXE+
1gYaLzH7qYzjfjP7XTkqHsdr/8TtlMkJNNe7Z74gxQbe8wd+tPqJ+93Tq/5D
WTbgd9H14e4V3K89o44dLsPzyxXdEbl9EvHUe5DcOvF8PAeOV6pPIuGovdrO
kraQMSQbUZg7iVgkyC/sPtlCCfn5ubTAKeS3B5mVfbYFidfnfUqCp1DjTrGB
rc22MEQtOPXfWXye/5pgfN5qC/TSL57Rzk8htobTDry9thCf0kbTT5jC52Hy
Ut+MLfRdniGXF+D7Q8UrZW8OO/iYrRDv1TqFLhTnfXzNZQdvfFTqrTum0Pcb
kS48vHaQ03N2m+a3KZQfTYj+JGAHf/Mykpj7p5CIfXubtIQdsMYrFKRMTCGJ
lamgWXU7qOP7b016YwrJ6+x5HOqGPz/9rDFOmoqe7Tv+h97DDj4xbIi4H6Ci
Q6zVxmmedvDisyO/sgIV6XeThu762EFXc3vnV1UqcjyVw95+yg7edREjhhEV
RRTznjkQZwdKwdXXHfF9qnUnj8ZwuR20dfDudrlIRQ5L3pdPVthBS0nli6oI
Kurtfd628swODLNqpNijqWj0voMfW7Ud0CWX21TF/btfXb+p9c4OSEo/eFqv
UJFoCNfG9W478M9HBQqFVBQ8wPHOjI4IEiN/2VLrqKjhI/n1A3oiLCj6LGrX
U5Hw43tVrIxEeFb8rXbyHRU1Rmg+bGQhAnfOtt8qn6hITNTzuhknEchrZ5Zy
vlBRm1eFj5kkEbgejsrdwvdDSYs/Rx7sJwIxyGWIpY+KLqgakVllieDz+pTP
6X4q/j3SY9OoQARGgbI5jUEqirxHp2mmQYRtW+2/ZI5SkeKU9Q4zCyKMNZDH
I2epKK7txrYHVkQ4L6AYXDZHRf3VP+hYbYlwtebIpzYaFSUkhS5/diDCo5nw
NvZFKhqSvT1gepgIjy3rLx5eoSI1rilK6REiWBt/8Pf9TUUp68odLEeJYHmb
LO+/ivfry8dPn32J0Br8Q9zvDxWlB8w+MQ0mwu+RNDrlTSoadzxUVnqGCEms
wWl76KaRNoouZgklgmPh3qV17MldPLmfzxNhh8RZsyr6aQQVOjGml4mw9Jag
vcY4jbJuxF8sjSeC+61XhXXbptFMVFsoSxIRBn/Lj0czTaMcO++Tn9OIcF2z
ctcf5mk0t5jiYJpDhK4dHmyvtk+jfkqhY14uEXrIgWTyjmnU+PqF0/wtItwT
0/tvDftu/JDzjUIiCO8rociyTaOMk8suP+8Q4YrPnytvsCNsWcl694hgdTDV
x3LXNHIRUHWfekAEo8jJyMO7p5EJnelhnUdEQExBn0awD465eVx9TAR22afq
nuzTaPfjeE+NSiLUk0fyHTim0Qf9vmOJr4mwe96xkY1rGj2Vovl8f0uE8Ane
wtPYBTsYjyvVE6GpMLmyEzv8m/yJno9EKD3LdDOZexr51hiclPtMhLWcL8HD
2A4FJP+oJiK8vFafrsIzjRT9ogOlW4nAvO95STO2sHV20MV2Irj9F3Sfk3ca
bVd9eKqtkwglZt3Ljti/+f4LlujG+bsSnJWFPf6363RYDxEi4ztS2rE7Rqhn
vvQRoWI1q5+VbxrVfdo8KzpAhE+JtokI++ZV6XOfR4hQRltnysdOCNENExoj
woYOz/An7BBXYvipCRyfrFCJWWwv8D3/YYoIT1SfU3bvmUY2Ehcv7JkhQqa9
14YCti5rxkX/WSIcUOLJNceWnbt36T8aEWoYPR97YfN11kRwLxIhemef3jns
bdWtkceXifAhhtshEXspbyzq9Qr2neKZLOzh6LVo9jXskr07CrFbfHbFeq/j
emnhrbqPXWshfrl6A8fbSmz+AXapkkbczi324His4/U/Z/FYxR/Zag9T1m9F
/j0f+8cz4TmjPXwihAsVYJ8aCk1kYbYHpbicquvY7h9SktxY7cHPtHwhHtvi
QWFyxQ57qGyybg/B1rjyIoVxlz3YmrC7eGJLnmlKdWa3h5i1uFQzbC7nobRH
nPaQKmQU9C8eW3SXr2zhsYcnM4OM7NizYqxXHfjsQeHOtO0cjmc/096MUn57
sLyw7tSI3Tijcu2voD1Ivm8SKMKuajPJtN2LPxf6WRiCffeF2/ViUXtgjfg+
a4ydcTM4a3WfPVQN7GDiwY6IjM+2lLSHMqXp2SG8/ye9b+UU7rcH8J98UIJt
rPAx11TOHh6c3nwij03aZmLfqmAP7YmnTCZwvvl9/7zTSdkexo+YadzCTkv+
EnlU3R463n7X+YPztcDTWnNawx5KV2fJxdhPNdoWT2nbwwk3rhlz7G8Tncci
9PD4rKan0nD+T75xFNlmaA9SzI+DZbDXrlN6Ugj2kJL9ba2ecxoJGfZb5Jrb
A1sn74spXF9HC34oP3ewh/6bIqFsuP5CQr1ntEg4nnS2lldwfSZYTRTXu9iD
6Ke87h3YD9epfK2H7WFxWGPvBq73RdLCBvW4PewR8RN9hftDNPuWJpFL9mD+
Je58Hu43mZPRsfcj7cGqb/7UDO5H994y6MrH2EPE0HDEIexGf+YKrQR7yI1J
//OJYRqxN+7Kdsywh3WOcbEPW/D6o4W9Uu7Zw9eEI1U6uF8+dS4Q5Cy1h8Sa
aoEja1T0XlHs240ynF+8Xn+jcH+dHJAwvf/EHgrJS3a1uB8raMkp1L+yB5Mc
2Q3OJSp6s6j1Z6XFHhz66nY6zFBRYXOVJ7HNHtytCh8enaai2GKVxvIOe/Bp
+hQSTKUiUyfZG94Ue/hRJVGUMElFna/41TuG7SFc+vvUbXx+UKNWg8uX7MEz
anD0Ej5veHZXUY/yO4CRi3HiviYqCjig3Nvm7QAzD2U9pYupSGf2aKcziyOE
FmqenLDEz9cYF9VudwT7qd0bJRZUNBsvE7SXzRGynh8XO2FORfmitO1jHPj5
R9EK8yZUtGF/3iBI0BH4eoOeMxhS0duaq0/jFBxhSVRVz0KTivQS36Q/c3AE
4Rj6W6elqIjfsdCdh+QInxkNCiwlqWhBLPZAmIsjLGz5k71fgoqKak0bdA87
wvIj5ZPDYlRET+vc/OzrCAc/Hae5C1PRO8fpgKHzjkDK0H2UzE1FRuJ8ljuL
HIE17VVWLQMVVf78IHr0riPs2rO99c1WKhKvOv3r1T1HSB7Q0KinpyIGs6+3
fcscwSfmTlEzHRXVB8YtvKt0BB7h/xhp61NIt2YpO/yTI0hu6F0PXp5CanZt
IxMzjqA6TjkRhO9D9wQiqnTnHEGL+Ov+zfEpxD12IOX6vCMUXjPXbxibQkuh
CQcNfjlCrmFdlsToFHqahxLyNx1Bota9hzY0hRSmHsk5cDiBWOmbU429U2h/
ZNK5enUn8Ip1IVz5OoVqtYoZLTSdQNrt+qeelilks/I2o0vbCaoyU+gksc8F
LD+c1HOClIvcN981T6EGsscwm4UTNL5zvMDZOIV8NdTMXD2cQD79nc62D1No
fcmme9TTCVYJxUdPvp9C6U9OHA3wdgKedopJ57sp9FKq8FKUnxPcr881K62f
Qsw8O57dP+MEtfkeGr51U6h0YVhgKcEJ0p223NaoxfEpXy+5mOwEIcbqt2pq
plD7cV41pjQnKPio54Cw14YsbPivOYGI9PKq+aspZPa1KhbynMD//Cum8JdT
aCCpnb3xthPsHgn7zoIdTPiZTyzC6zO09r9ZNYVyX4tVH7vvBAGV5FfvXkwh
alnqz5QKJzjCStvY/3wKXfIpCeepdILrTh65Hyvx/XffO6aCF04AbRXT3tia
ub9Fn9U4wdAf3kelz6ZQUoKXY88HJ8ja/jXL6OkUEja89MOzwQm+3JD8QqvA
+7OZEzTT6AQmL/Of5WH3hrQkbX51AprT7rT1J1NIxlvjrUSvEzhtfjva8ngK
XRGzWovpdwIuDYXXydhLg54HRwac4JnZ7wQz7DcuKWX5P5ygxS3uXHP5FLKz
Gczm/Ynjl1x3Z/jRFKraudR+ds4J6ApbYx5gCzYxs3XOO4H1ix+tZ7DHjZRj
0385ge43s/Kd2GFal4NY6Ehw9M5dV5uHOH6/b5T50JPgY6B9oji2/ovy8Q8M
JDgrFSq4VjaFdihRyNEsJDhhZRlYin1qdiZ7aDsJ0l4KysVgfyvb0qHLRoJn
W7Mt3LELJGVN/3CQoFb5/UM+bMZRFOvMTYJw9mvTKw/w75NC+7dVvCSY/2iY
QMFWFbx08IwgCerKErrzsG/0ZAS1C5NgsUstIRp7I+t+maIoCbKaNzN8sRvY
20R/SpBgqHbz6SFsua9jZPP9JHhoNflBDDsjZS27VIYEEe/95NmwV0x3dTDJ
kSC3iDC9VjqFyEzibMcUSKDtr/VnEvu/94dM3yuRoLiE2Y2CLRltGSumSgLO
Hv9dn7GTkOfbSDUSNETLsNdgz62HrA0cIgG9zIZHObb9q+SDOlok2EIs+VuE
/TK0IOimDgkYoyfHcrCFDj4vW0UksNS6xJeOHb3wedxJnwR8W6UzE7AnHg+I
vjAkwX23EqdobAv/RTKXMQk0vtYcuYhdIcOcE2xKgp39YhVh2DyTgh2t5nj/
mPMMQ7HPFyuxKViR4AJlij8Ee8iTYJpqg+PV2qD8z0YirrHTdiSgnVlN+vf8
g++Bb00dSNBkqiUWjr3rZuzafScSHOuwXPn3vjOkGwe3ueD1ZNGYY7B7uMuD
jpJJ0Mf9wyERW7ejvqzenQSq3aP9/9ZzJ717XOQICczdn9+6gc1sNSMa4UUC
mQXOzDvY/tu3uH33xvFayv/vX7zaG7hztHxJ4BfXse9fPNXjZDpu+OF8mVap
bsC+ZYDYfp8kgd0x/chubO83vrGVp0hQfjc47zf2rD811OgMCe5+exK3A+/v
OaGTJ76FkIAnqu6rKHbShUC73+dJYL37dZgNNteBeaPESySIdhv4dhw7ry9Y
gz+KBLuWNFJisZ9ohohox5Fgdwvz79fYmtQVzi8JOP/Cnjzox353I4zJPZkE
rPDn0Tr2t98XZiPSSfB8eiQfcH6vv4ipfZdLgo0QylI3dtwxxif2eSS48iBk
hQ7X0y6e+Dtjt/H+5SZqyWKLnU1KYiomAV28Z2QMtrHKVZL5YxLcuUGu18f1
2TrCYdFfQYLYzpTss9guGZnIv5IEzAeu55Vin5zPlrxSTQLj4hcq3LgfZDzO
X2r/939KsysWa9iCh0UmvT6SoFn7rr8a7h/FbEV9Sw0kEEzXKD+N/dK/uJ6n
Bdfbq/tx89jfZR+mu1BIIG1l6byG+9P+kuoDIzMkcGIcKNHF/e6pk5bI6TkS
pBMZGpKxtZheczIskGDU5MhoD7bVsbo1iRUSVIe83h6G++UZ8U8Nx7c4gzzd
Ylc97q9vCzqPznM7w3j74uFo3J+HLEQPh/A5Q6db/vV+bLpVf+c//M7gUPbg
lno17j+2TFaMIs7AVezJQ8P+uEVTfY+MM9yWe3LeD58HzZ63WfR0neFQ8F+x
mDe4v4r7lacfc4Yyl4l8VXw+LZVsrihUOUPC6P6zwp1TyEuijCXX0gXMjYUy
dBemUPgHdz9JGxfQKF7OrsNO9+ZoemrnAnzr2cH6i/i8LA5LaXJyAdZujttG
Szh/JE12/T3iAvs4xopMf+H5SI5xeYS4gDWz3ThhDffz/XtFJG+7ANMXocvb
8X0AGtojnxa6QIrd0EYstqNv3LDuXRfQExIS2MCOKflZ5FTqAmpbZg/O4ftE
//5aicRnLsB5waStmZGK0qSdZWc+uYAQQ23UGRYqmpe5pvaU5gIPvtGtn9xN
RZRmMOJcdIHFGopWG3ZdwCzxzLIL1AEXy0F2/P2npqfU1lxge0KMyR9sGU26
h6+2ukL0/SHDaE4q8jT1F33H4wola1GRYTz4vudjvKNT2xW+ugWMMwlSUQ3L
Mv9B5ArnSmOOkLGLyoqks/Rc4eEPKfsn2EFzfwkkgiuceDmc5yhERTtDK6P6
rV3BYyn82S18nyLEia6MerqC+GWWk2yiVPTy7p/h5QRXuJTB7XoZ38fUDM6s
mCW7gknYWs5H7OfDMzsKUl3hun6eMRO+vz0VHlA3y3CFwpCV5Tjshzl1qfk3
XWGH5p+0CHzfK0i5rGFc7gpnxSTCHaSpSFh2w+rWE1eYbD5xLxU773PI0fmn
rsDzKwo+YOdu871ys8oVPjDMvlaWoaLMSLOxuTpXMOy82L9NlooSz+y6mtPh
ClX6+vnXDlARM2fCvZ9drpBB3lZUjx1XQVerT3GFe8sDHPPYsbPz4zP9rnBz
LF/LQo6KLvl2auuNu0LmRY6SP9jr2yztsiZdgc9OhVNSnor78wefaaorpBzk
mrbGPjfyIuP6nCuclHk+XIgdTL4xOfUbjy+oNqerQEW0NfYN3T+uMLWw/P4o
duCNJM7Mv65g7tfMnIR98tt5XV16MkS0+vW1Yx+zcc/M2E6G/fEHKtwUqcjF
cB9oCZOhfEutIUmJiv52MrO9EyGD4a6O86HYBd6zfWb7yMDx0p01C3s8rjrU
ZT8ZqhIq5Nuwgz9bPw5TJsNesnMuUqYibpeDF7ccJEMB2+Frztgvqfzmiepk
kJhgGg/G3tg+Pp6jTYZR8125d7CTrC4IvySQ4b/HSaZ/seUGj8wgUzIsuiFB
DhUqag00fvXJnAwhzxUsJLF5rnI4dtuQgavoygcL7GrR3/sOE8mwlTS26zA2
+en3+XEHMkz+1q8Owi7qKEn95UIGXZ0RmQxso6NprpfcyBC1hXWpEHty6bT0
Ng8yHFlgFK7AludBH7i9yZB3k5D1Bbvtnvi1PB8yfDlzaqwX+4w66xEJPzKg
Wu3sCexXpK511UAyXO2OFN/Edpt61Vh7igxGzYN0rKpURBdekGN4hgzDQWV6
XNh3WOOONYeQ4WuX44QQNuHmCVX7MDIUszksSGJPydrS958nw2qVopcCdkqt
WqvXJTLcImVoqmMrWArmT0eSQeOwYJgudvv3LSdPx5AhVPPUXiPsswETGn8u
k4HeWUXeHJtvs5kpJgGvV5rxng12zZWnXazJZLjNnxjvgO0uknMnI5UMjDeP
dDhjb6m4eIo/nQyue5SS3LDv6nmhogwyWDDkPvTANm432SlznQyRjbpaXthU
T/m+imwyFPb+p+aNnbrIWaqRSwbnOx9uH8NWjF0N+e8WGWyuzYT4YHdwDRqa
3iaD4p6e2n8OKX7P0VZIhjt35IL/eY/agyHSXTLYFqZk//t+7ccr5UP3yPAj
Mkfu3/iHnc5e8C0lA0PFouq/99NPupjRysjgVgDl/+ZXfA74zpWTIeu1aO6/
+ZuwSI5vPiGDS6jG6r/1Td/YXhn/DI+vLdP8b/1pMvNRu17g/DyfxWmLrVTz
zTr7JRkuFYm0/otfp3mt0N4aMjCLnqAnYJ/rL5y+95oMft58ZQhbwD++Wr6O
DFYDjY2H/o23eexgcj0Z3nprjyn9m18GoWLiPRmanW4nyvyL1wvG0oLPZPjM
XBfM/y/+pmPif5vIIJn8+iX7v/3se1/g3EKGw47yyczYr+hiczg6cL5ZTXUv
/cvPa15cgV1ksNM9TaT+y28Jg/SmbjLwb8y5DWInmdEnxPbj/T2tJ9aA7ZIZ
GfprjAwnx+vCMrFbJD0W7SbJwMbgfikOW78aBT6mkoFnc4bnHLbMwMYx3zky
HODy2OaCvSp10bH3NxmO+vHS+LBPviK3q/3B79tXV8yEPWShbXXtLxnGPzov
LeP6bTj1x8iC3g1yHAfd27BzasIOvtnuBl69b8NjsHdYOVfws7nBFuV7LIHY
kUOH5EJ3u0ESpUrNBduX8be4IrcbnBgXDVDAVrcO4SoSdoPKtmDvLtxvvo0E
L15WcoNpEx723dhmZ+0CR1TcINe3vmsZ97M3TMrTumpu4Cn1yKAP+96B+ZEV
TTcwd9wqXIwdEhLYftzQDb4YcQ2pYnOznqywdHIDn32KB41wf7xrcDGc5uwG
YpQcdTFs5YtpBtfIbqCYzNK/gfuvFe1JF+WIGyyEMu6qwo77trzqddINRnXC
NPZh/y6K0A+PcgMu1sHIadz/e7Wuddwrc4PeH1sH9fF54nv27i3Tcjco3T/O
yYP9q/y598wTN4h/Nsk6hc8fDjHKitIL/P4xC4M0bHNmIcHXdW6QX3N5tWs/
rofOe0c7utzgvoe5qys+38zYXsqFUNxAvr9PWhabYvz5F1+fG7yeON64hs/D
pVfTCe5DbrBnl/vlG9hyhYqPpqhu8AHV/+3E52ltr15Iyk83SO13Cb2DbcZF
RAo0Nyj+/LjxFPax+LNtZ5bd4OeSPz0b9lJdXC7vbzeQ+/Fxsk+ciqLXsr1e
rbnBj6iah6XYu1VLD7j9dQPeUgPrUOx8/1fLm5tu0K7o1GaI/T8Xz8cv
               "]]}, 
             Annotation[#, "Charting`Private`Tag$78637#2"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
          GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {False, False}, AxesLabel -> {
            FormBox["\"time\"", TraditionalForm], 
            FormBox["\"n cells\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox[
            "\"\[Beta] = \\!\\(\\*FormBox[\\\"0.0027`\\\", \
TraditionalForm]\\)\"", 
             StringForm["\[Beta] = ``", 0.0027], Editable -> False], 
            TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{Automatic, Automatic}, {
            Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
        
         FormBox[
          
          TemplateBox[{"\"susceptible\"", "\"infected\""}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
           Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {192., -576.}, {Center, Center}, {360., 360.}],
      InsetBox[
      TemplateBox[{GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              LineBox[CompressedData["
1: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
6N+0zfE/IArxng==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$78474#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1: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
QG5QyFdq5iW8p7vW+VlNESZsZ6/bSP/FyYVhJXu6ipC5KvdttH8B85MRxYtb
KAJF4PcPl64uYOP3RzRuuStCc3bQYMXneZyhxf3SOEkR+gnXX4iEzWElMEr7
+FMRbjzbfJ1INIs/PfxycWdGEUTjVTPPvp7BrgfW5qKrimBjK2R23GcGX290
pbxJoQSDW2o3jn6fxv1qweGG0kogzVcZMNc4hS8qP3Jpj1aCvddEohZlk9gw
l3bVKFEJxsSuBW9emsS85FfiO+8pQYrX9+tYbRJ/+WpT3lukBEV8IcGFHRNY
wp+aZKRTCYKdyoefLvzC04UhhctsyjBRmJ553HIcv6GZVLnErwzGombftrjH
8f0gy64NcWVg4olWcV0cwzqa4pu7oAw7t/b3apLHcN6PcQNyT2V4/rRGKPzb
KHZiNJ1nf6kMPFkvD5FsjmDZ8LqonHplkFz28IfHI/jIuDAzT6symJvSYRer
EVzzggQLfleGJyD1UbHiB2Y2qkmWOlAGbgEGPcawYfwlil9Ox0gFhtlSBC5L
DWLtv9thfr9UQDtvQoFSpB+H6qeefDunAq+OvlR2+duHSx+JDzKsq4DMUWMD
08o+zEpwVa6hUAWShJHAJZ0+PFf9foNEQhUa226I8pz/ilOik4MeXFYF16Ja
3i89PbhtSIR/LkoVqBXJSIjyevCuXEsvuqkK5FBDXh7Qgz2m1mQmslVh3vqw
0x36Hqxi7Lgk0aIKpx+vYiGHbjzOJOj3jkYNnjV836A76MIsF95wsrCoQWOt
RuXpZ13YuM3usze3GrRe/PxfokMXrgy7KXZUVg3a00MSPWs68Y2fi7P2dmrA
KiwqvhH5Gcs8rfP8m6cGV/2MBB7If8RRahan2ZTUoZBRWvCn4AesfypnWVFT
HXKcjkkG/GsYaCP/XLM2Vgdmx06N2sJWnNUSW5jsqg7XOy9XeYu04mrD2j9k
CeqA+z7okCu+x4t2fMEr39VB586WfnxAC64K8yc/NvFP/o1Q6SPVFvxfVkO6
xII6vHlQ0WJF1oKpR23rvIkR1CzF+IVnN2Mhz0Si0ZMIPG8Vtxf3vMWnLq3d
+BSOQLepvo/NtgkLpGlyzMYioOMZqNkRafoX/9vPyZMRjPAksVRvv8FhuyJf
NAsQVJaYjJ80eoPvXTvFVPMJwdIGMCZsNOBPdz48fMyJ4Qi3P/vb8Dqc8pJR
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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$78474#2"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
          GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {False, False}, AxesLabel -> {
            FormBox["\"time\"", TraditionalForm], 
            FormBox["\"n cells\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox[
            "\"\[Beta] = \\!\\(\\*FormBox[\\\"0.000135`\\\", TraditionalForm]\
\\)\"", 
             StringForm["\[Beta] = ``", 0.000135], Editable -> False], 
            TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{Automatic, Automatic}, {
            Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
        
         FormBox[
          
          TemplateBox[{"\"susceptible\"", "\"infected\""}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
           Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "Below"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {576., -576.}, {
      Center, Center}, {360., 360.}]}}, {}},
  ContentSelectable->True,
  ImageSize->Automatic,
  PlotLabel->FormBox[
   "\"HIV dynamics with different parameters\"", TraditionalForm],
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.770880558339123*^9, {3.770880622312838*^9, 3.770880640777171*^9}, 
   3.770880727257738*^9, 3.770881403721078*^9, 3.770881881771934*^9, 
   3.770882084308195*^9, 3.770882150340476*^9, 3.770882193887933*^9, 
   3.770882225099709*^9, {3.770882350821897*^9, 3.770882384095538*^9}, 
   3.7708826133976316`*^9, 3.7708826441664886`*^9, 3.770882693816513*^9, 
   3.77088274337245*^9, 3.770882933817337*^9, {3.77088304749555*^9, 
   3.770883070722968*^9}, 3.770883120412744*^9, {3.770883152765438*^9, 
   3.770883184527014*^9}, 3.7708832282537746`*^9, {3.7708832697281437`*^9, 
   3.770883282864256*^9}},
 CellLabel->"Out[260]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsnQecZEXx+B87s7O3e5Ej3ZGODHJhyXDknFEUyUhOigFQ/Bn+qAhIMCGg
IiJK8KeScxIByUERjnSEA46oJBEly/W/v9Vd/Xpm3rz3Znf2OP3d+3x27/aF
7upKXVVdXb3dPl86+IDP7fOlT++3zxJbHL7PoQd/er8vLrH5Fw63tyrzJEnX
ovZn1SUS/m+SRH+l1+L8iu/MvTEn3dhX/qmYU045xVQqFflLns/vHzzwwAOQ
1Nxyyy3JWbP3m6nyT838+te/Nv39/aavr8+MHTvW7LHHHuavf/1rlzzuMX/6
05/MWmutZWq1mll22WXNeeedZzbZZBPz9a9/Pekq00TNvPLKK2bvvfeWR6NG
jTLbbrutefzxx/Xxq6++ag444ACzwAILmGHDhpkpU6aYs846SwHQMdHxYost
ZkaOHGl23HFH88ILLyRupKPMIYccIp9uscUWMuz55pvPHH300fL/H/7wh2bC
hAnmhBNOMAsttJDp7e01H/vYx8yzzz4rXXSZbbbZpgCW1fzjCI3S9g477AAy
Kh7U3/zmN/L473//uzyO/k4Keqj4x/fff7/ZbLPNBMpx48bJyN544w339fCm
gX7wwQfmO9/5jllqqaWEQgzUUsa8++67iSLw5ZdfNrvttpugHgT84Ac/MKuu
uqpQcE/f7d133y1UHTNmjFBxo402Mvfcc0/cxCc/+UkzfPhws+CCC5pvfOMb
5qijjjLrrLPO7GECRfxPf/pTs/LKK8srtnNz++23Byawrwv8o0ePNu+8804d
E/zlL38J3y+//PKCq9VWWw1CKmq/+93vyvj0ykOt44fuui48nybKDC+++KJ0
efHFF8vz6O+yzJCLs+FNA+aiN4jb09MjlIIKzz33XGCGf//73+bII48048eP
l9Huu+++5rOf/axQcgGnGNaSfzY1119/vZlnnnnklWuuuUa4ebnlljNrrrmm
dDVr1iyz9NJLC4LOPfdc87Of/cwsscQSMhgQxVXUxvvvvy90AJxf/OIX5vLL
Lzfrr7++WXzxxc1rr70mzxnOIossYk477TRz3XXXCbggkvcV8fyNuJx55pnm
t7/9rfSBtnrrrbfkHass5J1dd91V4MhSEsA5depU89hjj4FlEUPa+Ne//hX0
RNIbwM4BK1m1jL6YkqcvynQj7zz99NPCAOjoiy66yJxzzjmiJj/60Y+2HPkX
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
PZydWZtXeuQdu9yJ451bJ65V4717LB92NNqrY2g+wnZ0Xp6dtJF3UnFjelvV
XN9/eEoyqdzhSOYPQ+cl2VcrYC7mwYpPv9WM3MGerJuH6iijjApPTSspqqUG
cAZpi6Nday04/Pf9Lgw+s2dZ9H9AV3pWTKb+0Kkt60jTgR2S2jpTsCqVyBRd
lo456mKC/NPXNMzr+l15oJm1ZUxYxBo7dlpGS63zyapSPUsBeeedQQPyBWdP
mOWWE0YckvXQYf6e7nqn7FJnNkoXjPTa/iOkx2dqS4fsKjN16tCP1KcyUYZw
9oz0mv4vpyPVyo7bbtsec1WkRjlfrriiydz632KJtxb6f7a2VFqUeM89JRei
5Yqu9vopl0NN0psrG9W8ots84qv7/yftUeOMhx3W7oi3cwXkwFnhiDOguKr/
K/L9c7UlUyf16KOHnsMo4kVfu+8+JBzWnPaiI32xtni6ck4el/+8bNqLDkCL
TBxySAnEN4NzZb/L8PxXZVQKjjP8BwSOlq60E3wxOM2HGV7R/7WkqmCQ/TJA
MLTEqDVi2xFAO033f13nhRQfd98dPmx/4T8/aVWL3mEg6XT0i1+Y9lmxRZJq
M4rtCFMUk9c14JG1V0iqKkfq6BitTzwE4tY82sv6/186Wso++s/KMpTCTtkZ
hd1aiANg7Uv7j0whIVNxgJDEJV2s3zMASC7pF8c0PfvMf5YV+MiDJN6L8fTT
g4aECtz+M7FJh5QX2cajsL/xxuzhxYv7v5mOdqWVBox36t4Dd9VVnGlDv3Wb
i/q/lQ6cnw03dP0XaKhKKHiz4IJxhlnOkpB6CQVl23ITs5qReGH/USkS2ZyR
g8S8/KqBFZNrXY2tIoVgQdBHPpKd/1aYZTGmqIaatJOTMVUKZ5QQjvEzaK5v
HRvtSFG4LOdbUa6+yDrrdCoPtUQqTJmCbOVyspopdf6Ub6eUcjHQ2UKpzpSZ
yyOVOlPWUZh9pGqu9tZdV+2tOOcrg0T9R6ckoqCqB6fdZYNBVqJrXausItXC
nePYtiYa5huPa7wV5nZlYOm8/mNSLJE72yaWsuAYWOm2SijdfthhA1TM5aqu
+XWolpkNLgOuougxdS7G6afLallYIJutaU5zn8191vjswPzUt0GWIWzMfutr
hEL+Hj78PRFcorz+3pBl4sx99n/+2WAy38qVZitOVXAzaQzHb6ccm86kVoSG
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
fWiDxC+N/naHvVQoFGK0CWwt/zCLvvxroh0znfNxOmuKbNM9fkFI7aqLQe72
2TLe6ftQ8i/G5Z/NgqK11M3ivABQMZsWEzlamwn7hNuKMOrUUa+BdR9WEKko
+X3mUcs+l2RwdVWHXYA6rILo7brbsZvQduilVomIAPGjQzlWXaJPASfNF4jI
8rGVFJMDsaOga7aYh86IiNBFuVjKTZWWNsmtsmGmnZ3WhD1myufjlNdU216b
UAQvMHIaO2XJzFpRUaS3OemiGwsMx3hyfYZJZZtFDF2noYSJomWXHldM9Pbb
b3cmiutiZCI0VhZvIqR+4403Rib6BxfeXF2N3SwpykfkCRm4v8YoTWRCRsLt
pqzoR52MMIj1DE1Lu49bF/CDBughSpohUjXjUVs+RhVpk1sxT5thZ541QY+Z
6vk41TW1dq3JhJrcLsoLmGQEP/74YxVkBVDDPH/dmMckyDyP7CW7itwFOQWa
Xh5a0Gj5aiWECmb2pYh2DsqXQigJVECx8GaLWRa8m2qOfSwhGyx7Ij3IzKUE
KnX7/g8mFHHdl4E5qoxz/HGbPbK3X0Sv0h7kf/LJJ5VrPvroo1+3V9uI55Wu
w86c17Q5ZuDn48DXc98m76Z1bc2tmD9lq2dquKipePf+fFzfSf9uN9T0HU7v
gXzOmUXDBBwchGNsPcoOimWyX331VS2T7LTUMJ8+fdo3VuGfUcPksPAM3Sy1
st+2X9p9/Phx/Vw4cUsrIxRjyNGTnj9/noFGgfBz6wEAyykeY6JFmv9bq8qt
HJ0v9HCGKEg26pmJxo96ZptI56o13W4+oyOIgkExxKh6RcWSVZThkAXNNbPk
hBjJNK/MnJs29kJmzmUTCFtaO19++WXnhCKuq3YGfzJsCR26/5/2w8/8VUHr
tFUo3+X1yd4+N2OftS2Kks8iU6mDLCwJnihPrHWWecgUd7ncgIw9+gW1PJzx
zTff1LLCzf1dtlm7YqvvlOvmtLnVnE7HOd2IPpmn3Zrxs3SUPXny5N5SkyDy
Xh1ZZIIX3QCNQsr0HquycFDnkkj/2Z141i+BI2QHxxmQxepM9jRJpmEUzDNe
sKVJLsHxPDEmGyOk664vl11XgthWFDkyeY6ynTrD3ImeMkLTeMZFla2g3hdf
fNEXVXzDeJSFcVAL1Zg5ac/mwIhg4eUj57d5gfM7tk3/QkzIOXvdJq1UP2hU
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
vbqj7B8n4s1D+vlHJ+793v8Bt6UILg==\
\>"],ExpressionUUID->"e94b84e6-1535-445e-a5c1-1a96b1ef0140"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Here, we see the effect of latently infected cells on HIV \
dynamics, which is the rapid elimination of actively infected cells from the \
population. If these were the only cells serving as sources of new virus, the \
infection would be eliminated conditional on the value of \[Beta], the \
infection rate. At low values of \[Beta] = ",
  FontFamily->"TeX Gyre Schola"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2.7", "\[Times]", 
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]]}], ",", " ", 
    RowBox[{"the", " ", "infection", " "}]}], TraditionalForm]],
  FontFamily->"TeX Gyre Schola",ExpressionUUID->
  "57ab4ae7-21ec-443d-b161-1e7ac1e1310f"],
 StyleBox["affects less than 10% of cells. At \[Beta] values between 5 and 10 \
times greater (",
  FontFamily->"TeX Gyre Schola"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["1.3510", 
     RowBox[{"-", "4"}]], " ", "and", " ", "2.7", "\[Times]", 
    SuperscriptBox["10", 
     RowBox[{"-", "4"}]]}], TraditionalForm]],
  FontFamily->"TeX Gyre Schola",ExpressionUUID->
  "94ae4ac4-b052-46d0-8d1d-be543f108c43"],
 StyleBox["), the infection rate merely determines the time until peak \
infection; the population of susceptible cells begins a recovery in both \
cases. At very high values of \[Beta], the infection affects all susceptible \
cells.",
  FontFamily->"TeX Gyre Schola"]
}], "Text",
 CellChangeTimes->{{3.770882427162321*^9, 3.770882527002768*^9}, {
   3.770882998695054*^9, 3.770883009045409*^9}, 3.770883293831379*^9, {
   3.770883557386579*^9, 
   3.7708841838537407`*^9}},ExpressionUUID->"8e93411b-0677-4449-b955-\
c84cd8bf0d82"]
}, Open  ]]
},
WindowSize->{960, 1043},
WindowMargins->{{Automatic, -1920}, {0, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/pratik/projects/courseMathModels/ex_chap04_\
pratik_and_josh.pdf",
"PrintCellBrackets"->True,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->True,
"PrintingMargins"->{{54, 54}, {72, 72}}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 357, 6, 81, "Section",ExpressionUUID->"41c8f6e2-a8fe-4e6a-88e0-1e28ab8f1d1f"],
Cell[940, 30, 640, 16, 74, "Author",ExpressionUUID->"c4b2ec23-cf6f-46e5-b968-a60c8fd60a66"],
Cell[1583, 48, 1120, 29, 135, "Text",ExpressionUUID->"760e56cf-84be-4380-9184-0be450bde590"],
Cell[2706, 79, 1092, 17, 36, "Input",ExpressionUUID->"8ef243f4-6f94-4d11-97c6-d7657e3eed67"],
Cell[CellGroupData[{
Cell[3823, 100, 2596, 70, 172, "Input",ExpressionUUID->"6cfc5c05-8640-467f-87bc-69428a7a07eb"],
Cell[6422, 172, 1227, 32, 108, "Output",ExpressionUUID->"1442b11b-7df2-462f-8e92-8848ab9ad40c"]
}, Open  ]],
Cell[7664, 207, 6571, 149, 712, "Input",ExpressionUUID->"ac5b65bd-a65f-4a0d-8e82-415f05f5db58"],
Cell[CellGroupData[{
Cell[14260, 360, 2927, 62, 199, "Input",ExpressionUUID->"dd33e81a-9fd4-49cc-8ee9-3e8421eb3c71"],
Cell[17190, 424, 585, 12, 25, "Message",ExpressionUUID->"9a838e8c-a35b-4146-a841-9ebebd21daf8"],
Cell[17778, 438, 587, 12, 25, "Message",ExpressionUUID->"bc69daf9-b2d5-4448-8f92-9e536212f742"],
Cell[18368, 452, 585, 12, 25, "Message",ExpressionUUID->"54f46f12-0897-4fc9-b061-ed612762b37a"],
Cell[18956, 466, 618, 12, 25, "Message",ExpressionUUID->"cf6845f0-1e90-4a98-9685-58fb43c923d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19611, 483, 1132, 27, 91, "Input",ExpressionUUID->"eec7abc5-e3c3-4dd5-937f-cadc237c2be9"],
Cell[20746, 512, 193417, 3384, 582, 145352, 2596, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e94b84e6-1535-445e-a5c1-1a96b1ef0140"]
}, Open  ]],
Cell[214178, 3899, 1652, 38, 226, "Text",ExpressionUUID->"8e93411b-0677-4449-b955-c84cd8bf0d82"]
}, Open  ]]
}
]
*)

